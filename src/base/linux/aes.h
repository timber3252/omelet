//
// Created by timber3252 on 7/19/19.
//

#ifndef OMELET_AES_H
#define OMELET_AES_H

#include <openssl/aes.h>
#include "global.h"

uint8_t aes_key[kAesKeyLength] = {
    0x2a, 0x2,  0x29, 0x68, 0xb7, 0xb8, 0x4e, 0xea, 0x2d, 0x16, 0x4a, 0x34,
    0x98, 0xcb, 0x31, 0xc0, 0xae, 0x9a, 0xdf, 0x98, 0x33, 0x84, 0x42, 0x52,
    0xd8, 0xea, 0xe2, 0x9b, 0xf7, 0x60, 0x53, 0xb,  0xf7, 0x85, 0x2b, 0xb5,
    0x6,  0x0,  0x6f, 0x94, 0x65, 0xd1, 0x4a, 0xa3, 0x20, 0xcf, 0x86, 0x55,
    0x30, 0x37, 0x54, 0xd0, 0x56, 0xb7, 0xd6, 0xb8, 0x30, 0x8a, 0xfd, 0xb7,
    0xad, 0x6a, 0xe4, 0x4a, 0x92, 0x92, 0x27, 0x7f, 0xd5, 0xfd, 0x8c, 0xb5,
    0x4c, 0x30, 0x70, 0x34, 0xfb, 0x8b, 0x81, 0x9d, 0x71, 0xd5, 0x2f, 0xbf,
    0x62, 0xa5, 0x9a, 0x76, 0xb9, 0x3b, 0xaa, 0xfd, 0x4e, 0xe6, 0x1a, 0x28,
    0x79, 0x66, 0x94, 0x64, 0x28, 0xd9, 0xa0, 0x90, 0x24, 0x9b, 0x11, 0x96,
    0xfa, 0x3d, 0xd8, 0x7c, 0x3e, 0x76, 0xbb, 0x36, 0x26, 0xf5, 0x43, 0x40,
    0x1c, 0x44, 0x7b, 0x3c, 0x8f, 0xe0, 0x5,  0x6b};


int aes_encrypt(const unsigned char *data, const size_t len,
                const unsigned char *key, unsigned char *encrypt_data) {
  AES_KEY aes_key;
  memset(&aes_key, 0x00, sizeof aes_key);
  uint8_t ivec[16] = {0};
  if (AES_set_encrypt_key(key, kAesKeyLength, &aes_key) < 0) {
    fprintf(stderr, "Unable to set encryption key in AES...\n");
    return -1;
  }
  AES_cbc_encrypt(data, encrypt_data, len, &aes_key, ivec, AES_ENCRYPT);
  return 0;
}

int aes_decrypt(const unsigned char *encrypt_data, const size_t len,
                const unsigned char *key, unsigned char *decrypt_data) {
  AES_KEY aes_key;
  memset(&aes_key, 0x00, sizeof aes_key);
  uint8_t ivec[16] = {0};
  if (AES_set_decrypt_key(key, kAesKeyLength, &aes_key) < 0) {
    fprintf(stderr, "Unable to set decryption key in AES...\n");
    return -1;
  }
  AES_cbc_encrypt(encrypt_data, decrypt_data, len, &aes_key, ivec, AES_DECRYPT);
  return 0;
}

#endif  // OMELET_AES_H
